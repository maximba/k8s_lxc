- hosts: localhost
  connection: local
  tasks:
    - name: Creating LXD containers
      loop: "{{ groups['k8s_lxc'] }}"
      lxd_container:
        name: "{{ item }}"
        state: started
        config:
          limits.cpu: "{{ hostvars[item].numcpu }}"
          limits.memory: 8GB
          limits.memory.swap: "false"
          linux.kernel_modules: ip_tables,ip6_tables,netlink_diag,nf_nat,overlay
          raw.lxc: "lxc.apparmor.profile=unconfined\nlxc.cap.drop= \nlxc.cgroup.devices.allow=a\nlxc.mount.auto=proc:rw sys:rw"
          security.nesting: "true"
          security.privileged: "true"
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: simplestreams
          alias: ubuntu/bionic/amd64
        profiles: ["default"]
        wait_for_ipv4_addresses: true
        timeout: 600

- hosts: k8s_lxc
  gather_facts: yes
  become: true
  tasks:
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Set password to user Ubuntu
      user:
        name: ubuntu
        password: "$1$3Zdze7Vx$P2I3YFbwyDX/doWZRcrd80"
        update_password: always
      no_log: true

    - name: Install Docker and additional Packages
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: present
      vars:
        packages:
          - curl
          - wget
          - thin-provisioning-tools
          - lvm2
          - software-properties-common
          - openssh-server
          - net-tools
          - sudo
          - sshpass
          - less
          - docker.io

    - name: Enable and start services docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add Kubernetes Repository Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
        state: present
        update_cache: yes

    - name: Install Kubernetes (kubeadm, kubelet, kubectl)
      apt:
        name: "{{ kubernetes }}"
        update_cache: yes
        state: present
      vars:
        kubernetes:
          - kubeadm
          - kubelet
          - kubectl

    - name: Enable and start Kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes

- hosts: k8s_lxc
  gather_facts: yes
  become: true
  tasks:
    - name: Add ubuntu user to sudoers with NOPASSWD flag
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
        
    - name: Group docker added to user ubuntu
      become_user: root
      user:
        user: ubuntu
        groups: docker
        append: yes
      
- hosts: masters
  gather_facts: yes
  become_user: ubuntu
  become: true
  tasks:
    - name: Initializing the Kubernetes cluster
      shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=Swap,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables,SystemVerification >> ~/kubeinit.log
      tags:
        - skip_ansible_lint

    - name: Create ~/.kube directory if not exists
      file:
        path: ~/.kube
        state: directory

    - name: Copy Kube admin config to home directory
      become_user: root
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
         
    - name: Deploy flannel network
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      tags:
        - skip_ansible_lint

    - name: Generate Cluster join command
      shell: joinCommand=$(kubeadm token create --print-join-command) && echo "$joinCommand --ignore-preflight-errors=Swap,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables,SystemVerification,isPrivilegedUser" > ~/joincluster.sh
      tags:
        - skip_ansible_lint

    - name: Get Helm manifest
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/master/scripts/get
        dest: ~/./get.helm.sh
      tags:
        - skip_ansible_lint

    - name: Install Helm
      shell: bash ~/./get.helm.sh
      tags:
        - skip_ansible_lint

    - name: Remove Helm manifest
      file:
        path: ~/./get.helm.sh
        state: absent

    - name: Create Helm ServiceAccount
      shell: kubectl create serviceaccount tiller --namespace=kube-system
      tags:
        - skip_ansible_lint

    - name: Create Helm Roles
      shell: kubectl create clusterrolebinding tiller-admin --serviceaccount=kube-system:tiller --clusterrole=cluster-admin
      tags:
        - skip_ansible_lint

    - name: Init helm
      shell: helm init --service-account=tiller
      tags:
        - skip_ansible_lint

    - name: Enable Dashboard Token
      shell: kubectl create clusterrolebinding kubernetes-dashboard -n kube-system --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
      tags:
        - skip_ansible_lint

- hosts: nodes
  gather_facts: yes
  become_user: ubuntu
  become: true
  tasks:
    - name: Join worker nodes to the Kubernetes cluster
      shell: |
        sshpass -p {{ hostvars[groups['lxc'].0]['ubuntu_password'] }} scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ubuntu@k8s-master.lxd:~/joincluster.sh ~/joincluster.sh 2>/tmp/joincluster.log
        sudo bash ~/joincluster.sh >> /tmp/joincluster.log 

- hosts: localhost
  tasks:
    - name: Copy k8s admin.conf to ~/.kube/config
      shell: lxc file pull k8s-master/etc/kubernetes/admin.conf ~/.kube/config
      tags:
        - skip_ansible_lint

    - name: Deploy Kubernetes Dashboard
      shell: kubectl apply -f dashboard.yml
      tags:
      - skip_ansible_lint

    - name: Grant full admin privileges to Dashboard Service Account
      shell: kubectl apply -f authentication.yml
      tags:
      - skip_ansible_lint

